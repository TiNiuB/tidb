CREATE TABLE acpi_tables(`name` TEXT, `size` INTEGER, `md5` TEXT);
CREATE TABLE apt_sources(`name` TEXT, `source` TEXT, `base_uri` TEXT, `release` TEXT, `version` TEXT, `maintainer` TEXT, `components` TEXT, `architectures` TEXT);
CREATE TABLE arp_cache(`address` TEXT, `mac` TEXT, `interface` TEXT, `permanent` TEXT);
CREATE TABLE augeas(`node` TEXT, `value` TEXT, `label` TEXT, `path` TEXT);
CREATE TABLE authorized_keys(`uid` BIGINT, `algorithm` TEXT, `key` TEXT, `key_file` TEXT)  ;
CREATE TABLE block_devices(`name` TEXT, `parent` TEXT, `vendor` TEXT, `model` TEXT, `size` BIGINT, `block_size` INTEGER, `uuid` TEXT, `type` TEXT, `label` TEXT);
CREATE TABLE carbon_black_info(`sensor_id` INTEGER, `config_name` TEXT, `collect_store_files` INTEGER, `collect_module_loads` INTEGER, `collect_module_info` INTEGER, `collect_file_mods` INTEGER, `collect_reg_mods` INTEGER, `collect_net_conns` INTEGER, `collect_processes` INTEGER, `collect_cross_processes` INTEGER, `collect_emet_events` INTEGER, `collect_data_file_writes` INTEGER, `collect_process_user_context` INTEGER, `collect_sensor_operations` INTEGER, `log_file_disk_quota_mb` INTEGER, `log_file_disk_quota_percentage` INTEGER, `protection_disabled` INTEGER, `sensor_ip_addr` TEXT, `sensor_backend_server` TEXT, `event_queue` INTEGER, `binary_queue` INTEGER);
CREATE TABLE carves(`time` BIGINT, `sha256` TEXT, `size` INTEGER, `path` TEXT, `status` TEXT, `carve_guid` TEXT, `carve` INTEGER);
CREATE TABLE chrome_extensions(`uid` BIGINT, `name` TEXT, `identifier` TEXT, `version` TEXT, `description` TEXT, `locale` TEXT, `update_url` TEXT, `author` TEXT, `persistent` INTEGER, `path` TEXT)  ;
CREATE TABLE cpu_time(`core` INTEGER, `user` BIGINT, `nice` BIGINT, `system` BIGINT, `idle` BIGINT, `iowait` BIGINT, `irq` BIGINT, `softirq` BIGINT, `steal` BIGINT, `guest` BIGINT, `guest_nice` BIGINT);
CREATE TABLE cpuid(`feature` TEXT, `value` TEXT, `output_register` TEXT, `output_bit` INTEGER, `input_eax` TEXT);
CREATE TABLE crontab(`event` TEXT, `minute` TEXT, `hour` TEXT, `day_of_month` TEXT, `month` TEXT, `day_of_week` TEXT, `command` TEXT, `path` TEXT);
CREATE TABLE curl(`url` TEXT, `method` TEXT, `user_agent` TEXT, `response_code` INTEGER, `round_trip_time` BIGINT, `bytes` BIGINT, `result` TEXT)  ;
CREATE TABLE curl_certificate(`hostname` TEXT, `common_name` TEXT, `organization` TEXT, `organization_unit` TEXT, `serial_number` TEXT, `issuer_common_name` TEXT, `issuer_organization` TEXT, `issuer_organization_unit` TEXT, `valid_from` TEXT, `valid_to` TEXT, `sha256_fingerprint` TEXT, `sha1_fingerprint` TEXT);
CREATE TABLE deb_packages(`name` TEXT, `version` TEXT, `source` TEXT, `size` BIGINT, `arch` TEXT, `revision` TEXT);
CREATE TABLE device_file(`device` TEXT, `partition` TEXT, `path` TEXT, `filename` TEXT, `inode` BIGINT, `uid` BIGINT, `gid` BIGINT, `mode` TEXT, `size` BIGINT, `block_size` INTEGER, `atime` BIGINT, `mtime` BIGINT, `ctime` BIGINT, `hard_links` INTEGER, `type` TEXT)  ;
CREATE TABLE device_hash(`device` TEXT, `partition` TEXT, `inode` BIGINT, `md5` TEXT, `sha1` TEXT, `sha256` TEXT);
CREATE TABLE device_partitions(`device` TEXT, `partition` INTEGER, `label` TEXT, `type` TEXT, `offset` BIGINT, `blocks_size` BIGINT, `blocks` BIGINT, `inodes` BIGINT, `flags` INTEGER);
CREATE TABLE disk_encryption(`name` TEXT, `uuid` TEXT, `encrypted` INTEGER, `type` TEXT, `uid` TEXT, `user_uuid` TEXT, `encryption_status` TEXT);
CREATE TABLE dns_resolvers(`id` INTEGER, `type` TEXT, `address` TEXT, `netmask` TEXT, `options` BIGINT);
-- CREATE TABLE docker_container_labels(`id` TEXT, `key` TEXT, `value` TEXT)  ;
-- CREATE TABLE docker_container_mounts(`id` TEXT, `type` TEXT, `name` TEXT, `source` TEXT, `destination` TEXT, `driver` TEXT, `mode` TEXT, `rw` INTEGER, `propagation` TEXT)  ;
-- CREATE TABLE docker_container_networks(`id` TEXT, `name` TEXT, `network_id` TEXT, `endpoint_id` TEXT, `gateway` TEXT, `ip_address` TEXT, `ip_prefix_len` INTEGER, `ipv6_gateway` TEXT, `ipv6_address` TEXT, `ipv6_prefix_len` INTEGER, `mac_address` TEXT)  ;
-- CREATE TABLE docker_container_ports(`id` TEXT, `type` TEXT, `port` INTEGER, `host_ip` TEXT, `host_port` INTEGER)  ;
-- CREATE TABLE docker_container_processes(`id` TEXT, `pid` BIGINT, `name` TEXT, `cmdline` TEXT, `state` TEXT, `uid` BIGINT, `gid` BIGINT, `euid` BIGINT, `egid` BIGINT, `suid` BIGINT, `sgid` BIGINT, `wired_size` BIGINT, `resident_size` BIGINT, `total_size` BIGINT, `start_time` BIGINT, `parent` BIGINT, `pgroup` BIGINT, `threads` INTEGER, `nice` INTEGER, `user` TEXT, `time` TEXT, `cpu` DOUBLE, `mem` DOUBLE, `phys_footprint` BIGINT HIDDEN);
-- CREATE TABLE docker_container_stats(`id` TEXT, `name` TEXT, `pids` INTEGER, `read` BIGINT, `preread` BIGINT, `interval` BIGINT, `disk_read` BIGINT, `disk_write` BIGINT, `num_procs` INTEGER, `cpu_total_usage` BIGINT, `cpu_kernelmode_usage` BIGINT, `cpu_usermode_usage` BIGINT, `system_cpu_usage` BIGINT, `online_cpus` INTEGER, `pre_cpu_total_usage` BIGINT, `pre_cpu_kernelmode_usage` BIGINT, `pre_cpu_usermode_usage` BIGINT, `pre_system_cpu_usage` BIGINT, `pre_online_cpus` INTEGER, `memory_usage` BIGINT, `memory_max_usage` BIGINT, `memory_limit` BIGINT, `network_rx_bytes` BIGINT, `network_tx_bytes` BIGINT)  ;
-- CREATE TABLE docker_containers(`id` TEXT, `name` TEXT, `image` TEXT, `image_id` TEXT, `command` TEXT, `created` BIGINT, `state` TEXT, `status` TEXT, `pid` BIGINT, `path` TEXT, `config_entrypoint` TEXT, `started_at` TEXT, `finished_at` TEXT, `privileged` INTEGER, `security_options` TEXT, `env_variables` TEXT, `readonly_rootfs` INTEGER, `cgroup_namespace` TEXT, `ipc_namespace` TEXT, `mnt_namespace` TEXT, `net_namespace` TEXT, `pid_namespace` TEXT, `user_namespace` TEXT, `uts_namespace` TEXT)  ;
-- CREATE TABLE docker_image_labels(`id` TEXT, `key` TEXT, `value` TEXT)  ;
-- CREATE TABLE docker_images(`id` TEXT, `created` BIGINT, `size_bytes` BIGINT, `tags` TEXT);
-- CREATE TABLE docker_info(`id` TEXT, `containers` INTEGER, `containers_running` INTEGER, `containers_paused` INTEGER, `containers_stopped` INTEGER, `images` INTEGER, `storage_driver` TEXT, `memory_limit` INTEGER, `swap_limit` INTEGER, `kernel_memory` INTEGER, `cpu_cfs_period` INTEGER, `cpu_cfs_quota` INTEGER, `cpu_shares` INTEGER, `cpu_set` INTEGER, `ipv4_forwarding` INTEGER, `bridge_nf_iptables` INTEGER, `bridge_nf_ip6tables` INTEGER, `oom_kill_disable` INTEGER, `logging_driver` TEXT, `cgroup_driver` TEXT, `kernel_version` TEXT, `os` TEXT, `os_type` TEXT, `architecture` TEXT, `cpus` INTEGER, `memory` BIGINT, `http_proxy` TEXT, `https_proxy` TEXT, `no_proxy` TEXT, `name` TEXT, `server_version` TEXT, `root_dir` TEXT);
-- CREATE TABLE docker_network_labels(`id` TEXT, `key` TEXT, `value` TEXT)  ;
-- CREATE TABLE docker_networks(`id` TEXT, `name` TEXT, `driver` TEXT, `created` BIGINT, `enable_ipv6` INTEGER, `subnet` TEXT, `gateway` TEXT)  ;
-- CREATE TABLE docker_version(`version` TEXT, `api_version` TEXT, `min_api_version` TEXT, `git_commit` TEXT, `go_version` TEXT, `os` TEXT, `arch` TEXT, `kernel_version` TEXT, `build_time` TEXT);
-- CREATE TABLE docker_volume_labels(`name` TEXT, `key` TEXT, `value` TEXT)  ;
-- CREATE TABLE docker_volumes(`name` TEXT, `driver` TEXT, `mount_point` TEXT, `type` TEXT)  ;
-- CREATE TABLE ec2_instance_metadata(`instance_id` TEXT, `instance_type` TEXT, `architecture` TEXT, `region` TEXT, `availability_zone` TEXT, `local_hostname` TEXT, `local_ipv4` TEXT, `mac` TEXT, `security_groups` TEXT, `iam_arn` TEXT, `ami_id` TEXT, `reservation_id` TEXT, `account_id` TEXT, `ssh_public_key` TEXT)  ;
-- CREATE TABLE ec2_instance_tags(`instance_id` TEXT, `key` TEXT, `value` TEXT);
CREATE TABLE elf_dynamic(`tag` INTEGER, `value` INTEGER, `class` INTEGER, `path` TEXT)  ;
CREATE TABLE elf_info(`class` TEXT, `abi` TEXT, `abi_version` INTEGER, `type` TEXT, `machine` INTEGER, `version` INTEGER, `entry` BIGINT, `flags` INTEGER, `path` TEXT)  ;
CREATE TABLE elf_sections(`name` TEXT, `type` INTEGER, `vaddr` INTEGER, `offset` INTEGER, `size` INTEGER, `flags` TEXT, `link` TEXT, `align` INTEGER, `path` TEXT)  ;
CREATE TABLE elf_segments(`name` TEXT, `offset` INTEGER, `vaddr` INTEGER, `psize` INTEGER, `msize` INTEGER, `flags` TEXT, `align` INTEGER, `path` TEXT)  ;
CREATE TABLE elf_symbols(`name` TEXT, `addr` INTEGER, `size` INTEGER, `type` TEXT, `binding` TEXT, `offset` INTEGER, `table` TEXT, `path` TEXT)  ;
CREATE TABLE etc_hosts(`address` TEXT, `hostnames` TEXT);
CREATE TABLE etc_protocols(`name` TEXT, `number` INTEGER, `alias` TEXT, `comment` TEXT);
CREATE TABLE etc_services(`name` TEXT, `port` INTEGER, `protocol` TEXT, `aliases` TEXT, `comment` TEXT);
-- CREATE TABLE file(`path` TEXT, `directory` TEXT, `filename` TEXT, `inode` BIGINT, `uid` BIGINT, `gid` BIGINT, `mode` TEXT, `device` BIGINT, `size` BIGINT, `block_size` INTEGER, `atime` BIGINT, `mtime` BIGINT, `ctime` BIGINT, `btime` BIGINT, `hard_links` INTEGER, `symlink` INTEGER, `type` TEXT, `attributes` TEXT HIDDEN, `volume_serial` TEXT HIDDEN, `file_id` TEXT HIDDEN)  ;

CREATE TABLE file_events(`target_path` TEXT, `category` TEXT, `action` TEXT, `transaction_id` BIGINT, `inode` BIGINT, `uid` BIGINT, `gid` BIGINT, `mode` TEXT, `size` BIGINT, `atime` BIGINT, `mtime` BIGINT, `ctime` BIGINT, `md5` TEXT, `sha1` TEXT, `sha256` TEXT, `hashed` INTEGER, `time` BIGINT);
CREATE TABLE firefox_addons(`uid` BIGINT, `name` TEXT, `identifier` TEXT, `creator` TEXT, `type` TEXT, `version` TEXT, `description` TEXT, `source_url` TEXT, `visible` INTEGER, `active` INTEGER, `disabled` INTEGER, `autoupdate` INTEGER, `native` INTEGER, `location` TEXT, `path` TEXT)  ;
CREATE TABLE groups(`gid` BIGINT, `gid_signed` BIGINT, `groupname` TEXT)  ;
CREATE TABLE hardware_events(`action` TEXT, `path` TEXT, `type` TEXT, `driver` TEXT, `vendor` TEXT, `vendor_id` TEXT, `model` TEXT, `model_id` TEXT, `serial` TEXT, `revision` TEXT, `time` BIGINT);
CREATE TABLE hash(`path` TEXT, `directory` TEXT, `md5` TEXT, `sha1` TEXT, `sha256` TEXT, `ssdeep` TEXT)  ;
CREATE TABLE intel_me_info(`version` TEXT);
CREATE TABLE interface_addresses(`interface` TEXT, `address` TEXT, `mask` TEXT, `broadcast` TEXT, `point_to_point` TEXT, `type` TEXT);
CREATE TABLE interface_details(`interface` TEXT, `mac` TEXT, `type` INTEGER, `mtu` INTEGER, `metric` INTEGER, `flags` INTEGER, `ipackets` BIGINT, `opackets` BIGINT, `ibytes` BIGINT, `obytes` BIGINT, `ierrors` BIGINT, `oerrors` BIGINT, `idrops` BIGINT, `odrops` BIGINT, `collisions` BIGINT, `last_change` BIGINT, `link_speed` BIGINT, `pci_slot` TEXT);
CREATE TABLE iptables(`filter_name` TEXT, `chain` TEXT, `policy` TEXT, `target` TEXT, `protocol` INTEGER, `src_port` TEXT, `dst_port` TEXT, `src_ip` TEXT, `src_mask` TEXT, `iniface` TEXT, `iniface_mask` TEXT, `dst_ip` TEXT, `dst_mask` TEXT, `outiface` TEXT, `outiface_mask` TEXT, `match` TEXT, `packets` INTEGER, `bytes` INTEGER);
CREATE TABLE kernel_info(`version` TEXT, `arguments` TEXT, `path` TEXT, `device` TEXT);
CREATE TABLE kernel_integrity(`sycall_addr_modified` INTEGER, `text_segment_hash` TEXT);
CREATE TABLE kernel_modules(`name` TEXT, `size` TEXT, `used_by` TEXT, `status` TEXT, `address` TEXT);
CREATE TABLE known_hosts(`uid` BIGINT, `key` TEXT, `key_file` TEXT)  ;
CREATE TABLE last(`username` TEXT, `tty` TEXT, `pid` INTEGER, `type` INTEGER, `time` INTEGER, `host` TEXT);
CREATE TABLE listening_ports(`pid` INTEGER, `port` INTEGER, `protocol` INTEGER, `family` INTEGER, `address` TEXT, `fd` BIGINT, `socket` BIGINT, `path` TEXT, `net_namespace` TEXT);
CREATE TABLE lldp_neighbors(`interface` TEXT, `rid` INTEGER, `chassis_id_type` TEXT, `chassis_id` TEXT, `chassis_sysname` TEXT, `chassis_sys_description` INTEGER, `chassis_bridge_capability_available` INTEGER, `chassis_bridge_capability_enabled` INTEGER, `chassis_router_capability_available` INTEGER, `chassis_router_capability_enabled` INTEGER, `chassis_repeater_capability_available` INTEGER, `chassis_repeater_capability_enabled` INTEGER, `chassis_wlan_capability_available` INTEGER, `chassis_wlan_capability_enabled` INTEGER, `chassis_tel_capability_available` INTEGER, `chassis_tel_capability_enabled` INTEGER, `chassis_docsis_capability_available` INTEGER, `chassis_docsis_capability_enabled` INTEGER, `chassis_station_capability_available` INTEGER, `chassis_station_capability_enabled` INTEGER, `chassis_other_capability_available` INTEGER, `chassis_other_capability_enabled` INTEGER, `chassis_mgmt_ips` TEXT, `port_id_type` TEXT, `port_id` TEXT, `port_description` TEXT, `port_ttl` BIGINT, `port_mfs` BIGINT, `port_aggregation_id` TEXT, `port_autoneg_supported` INTEGER, `port_autoneg_enabled` INTEGER, `port_mau_type` TEXT, `port_autoneg_10baset_hd_enabled` INTEGER, `port_autoneg_10baset_fd_enabled` INTEGER, `port_autoneg_100basetx_hd_enabled` INTEGER, `port_autoneg_100basetx_fd_enabled` INTEGER, `port_autoneg_100baset2_hd_enabled` INTEGER, `port_autoneg_100baset2_fd_enabled` INTEGER, `port_autoneg_100baset4_hd_enabled` INTEGER, `port_autoneg_100baset4_fd_enabled` INTEGER, `port_autoneg_1000basex_hd_enabled` INTEGER, `port_autoneg_1000basex_fd_enabled` INTEGER, `port_autoneg_1000baset_hd_enabled` INTEGER, `port_autoneg_1000baset_fd_enabled` INTEGER, `power_device_type` TEXT, `power_mdi_supported` INTEGER, `power_mdi_enabled` INTEGER, `power_paircontrol_enabled` INTEGER, `power_pairs` TEXT, `power_class` TEXT, `power_8023at_enabled` INTEGER, `power_8023at_power_type` TEXT, `power_8023at_power_source` TEXT, `power_8023at_power_priority` TEXT, `power_8023at_power_allocated` TEXT, `power_8023at_power_requested` TEXT, `med_device_type` TEXT, `med_capability_capabilities` INTEGER, `med_capability_policy` INTEGER, `med_capability_location` INTEGER, `med_capability_mdi_pse` INTEGER, `med_capability_mdi_pd` INTEGER, `med_capability_inventory` INTEGER, `med_policies` TEXT, `vlans` TEXT, `pvid` TEXT, `ppvids_supported` TEXT, `ppvids_enabled` TEXT, `pids` TEXT);
CREATE TABLE load_average(`period` TEXT, `average` TEXT);
CREATE TABLE logged_in_users(`type` TEXT, `user` TEXT, `tty` TEXT, `host` TEXT, `time` INTEGER, `pid` INTEGER);
CREATE TABLE magic(`path` TEXT, `data` TEXT, `mime_type` TEXT, `mime_encoding` TEXT);
CREATE TABLE md_devices(`device_name` TEXT, `status` TEXT, `raid_level` INTEGER, `size` BIGINT, `chunk_size` BIGINT, `raid_disks` INTEGER, `nr_raid_disks` INTEGER, `working_disks` INTEGER, `active_disks` INTEGER, `failed_disks` INTEGER, `spare_disks` INTEGER, `superblock_state` TEXT, `superblock_version` TEXT, `superblock_update_time` BIGINT, `bitmap_on_mem` TEXT, `bitmap_chunk_size` TEXT, `bitmap_external_file` TEXT, `recovery_progress` TEXT, `recovery_finish` TEXT, `recovery_speed` TEXT, `resync_progress` TEXT, `resync_finish` TEXT, `resync_speed` TEXT, `reshape_progress` TEXT, `reshape_finish` TEXT, `reshape_speed` TEXT, `check_array_progress` TEXT, `check_array_finish` TEXT, `check_array_speed` TEXT, `unused_devices` TEXT, `other` TEXT);
CREATE TABLE md_drives(`md_device_name` TEXT, `drive_name` TEXT, `slot` INTEGER, `state` TEXT);
CREATE TABLE md_personalities(`name` TEXT);
CREATE TABLE memory_array_mapped_addresses(`handle` TEXT, `memory_array_handle` TEXT, `starting_address` TEXT, `ending_address` TEXT, `partition_width` INTEGER);
CREATE TABLE memory_arrays(`handle` TEXT, `location` TEXT, `use` TEXT, `memory_error_correction` TEXT, `max_capacity` INTEGER, `memory_error_info_handle` TEXT, `number_memory_devices` INTEGER);
CREATE TABLE memory_device_mapped_addresses(`handle` TEXT, `memory_device_handle` TEXT, `memory_array_mapped_address_handle` TEXT, `starting_address` TEXT, `ending_address` TEXT, `partition_row_position` INTEGER, `interleave_position` INTEGER, `interleave_data_depth` INTEGER);
CREATE TABLE memory_devices(`handle` TEXT, `array_handle` TEXT, `form_factor` TEXT, `total_width` INTEGER, `data_width` INTEGER, `size` INTEGER, `set` INTEGER, `device_locator` TEXT, `bank_locator` TEXT, `memory_type` TEXT, `memory_type_details` TEXT, `max_speed` INTEGER, `configured_clock_speed` INTEGER, `manufacturer` TEXT, `serial_number` TEXT, `asset_tag` TEXT, `part_number` TEXT, `min_voltage` INTEGER, `max_voltage` INTEGER, `configured_voltage` INTEGER);
CREATE TABLE memory_error_info(`handle` TEXT, `error_type` TEXT, `error_granularity` TEXT, `error_operation` TEXT, `vendor_syndrome` TEXT, `memory_array_error_address` TEXT, `device_error_address` TEXT, `error_resolution` TEXT);
CREATE TABLE memory_info(`memory_total` BIGINT, `memory_free` BIGINT, `buffers` BIGINT, `cached` BIGINT, `swap_cached` BIGINT, `active` BIGINT, `inactive` BIGINT, `swap_total` BIGINT, `swap_free` BIGINT);
CREATE TABLE memory_map(`name` TEXT, `start` TEXT, `end` TEXT);
CREATE TABLE mounts(`device` TEXT, `device_alias` TEXT, `path` TEXT, `type` TEXT, `blocks_size` BIGINT, `blocks` BIGINT, `blocks_free` BIGINT, `blocks_available` BIGINT, `inodes` BIGINT, `inodes_free` BIGINT, `flags` TEXT);
CREATE TABLE msr(`processor_number` BIGINT, `turbo_disabled` BIGINT, `turbo_ratio_limit` BIGINT, `platform_info` BIGINT, `perf_ctl` BIGINT, `perf_status` BIGINT, `feature_control` BIGINT, `rapl_power_limit` BIGINT, `rapl_energy_status` BIGINT, `rapl_power_units` BIGINT);
CREATE TABLE npm_packages(`name` TEXT, `version` TEXT, `description` TEXT, `author` TEXT, `license` TEXT, `path` TEXT, `directory` TEXT);
CREATE TABLE opera_extensions(`uid` BIGINT, `name` TEXT, `identifier` TEXT, `version` TEXT, `description` TEXT, `locale` TEXT, `update_url` TEXT, `author` TEXT, `persistent` INTEGER, `path` TEXT)  ;
CREATE TABLE os_version(`name` TEXT, `version` TEXT, `major` INTEGER, `minor` INTEGER, `patch` INTEGER, `build` TEXT, `platform` TEXT, `platform_like` TEXT, `codename` TEXT);
CREATE TABLE osquery_events(`name` TEXT, `publisher` TEXT, `type` TEXT, `subscriptions` INTEGER, `events` INTEGER, `refreshes` INTEGER, `active` INTEGER);
CREATE TABLE osquery_extensions(`uuid` BIGINT, `name` TEXT, `version` TEXT, `sdk_version` TEXT, `path` TEXT, `type` TEXT);
CREATE TABLE osquery_flags(`name` TEXT, `type` TEXT, `description` TEXT, `default_value` TEXT, `value` TEXT, `shell_only` INTEGER);
CREATE TABLE osquery_info(`pid` INTEGER, `uuid` TEXT, `instance_id` TEXT, `version` TEXT, `config_hash` TEXT, `config_valid` INTEGER, `extensions` TEXT, `build_platform` TEXT, `build_distro` TEXT, `start_time` INTEGER, `watcher` INTEGER);
CREATE TABLE osquery_packs(`name` TEXT, `platform` TEXT, `version` TEXT, `shard` INTEGER, `discovery_cache_hits` INTEGER, `discovery_executions` INTEGER, `active` INTEGER);
CREATE TABLE osquery_registry(`registry` TEXT, `name` TEXT, `owner_uuid` INTEGER, `internal` INTEGER, `active` INTEGER);
CREATE TABLE osquery_schedule(`name` TEXT, `query` TEXT, `interval` INTEGER, `executions` BIGINT, `last_executed` BIGINT, `blacklisted` INTEGER, `output_size` BIGINT, `wall_time` BIGINT, `user_time` BIGINT, `system_time` BIGINT, `average_memory` BIGINT);
CREATE TABLE pci_devices(`pci_slot` TEXT, `pci_class` TEXT, `driver` TEXT, `vendor` TEXT, `vendor_id` TEXT, `model` TEXT, `model_id` TEXT);
CREATE TABLE platform_info(`vendor` TEXT, `version` TEXT, `date` TEXT, `revision` TEXT, `address` TEXT, `size` TEXT, `volume_size` INTEGER, `extra` TEXT);
CREATE TABLE portage_keywords(`package` TEXT, `version` TEXT, `keyword` TEXT, `mask` INTEGER, `unmask` INTEGER);
CREATE TABLE portage_packages(`package` TEXT, `version` TEXT, `slot` TEXT, `build_time` BIGINT, `repository` TEXT, `eapi` BIGINT, `size` BIGINT, `world` INTEGER);
CREATE TABLE portage_use(`package` TEXT, `version` TEXT, `use` TEXT);
CREATE TABLE process_envs(`pid` INTEGER, `key` TEXT, `value` TEXT)  ;
CREATE TABLE process_events(`pid` BIGINT, `path` TEXT, `mode` TEXT, `cmdline` TEXT,  `cwd` TEXT, `auid` BIGINT, `uid` BIGINT, `euid` BIGINT, `gid` BIGINT, `egid` BIGINT, `owner_uid` BIGINT, `owner_gid` BIGINT, `atime` BIGINT, `mtime` BIGINT, `ctime` BIGINT, `btime` BIGINT,  `parent` BIGINT, `time` BIGINT, `uptime` BIGINT);
CREATE TABLE process_file_events(`operation` TEXT, `pid` BIGINT, `ppid` BIGINT, `time` BIGINT, `executable` TEXT, `partial` TEXT, `cwd` TEXT, `path` TEXT, `dest_path` TEXT, `uid` TEXT, `gid` TEXT, `euid` TEXT, `egid` TEXT, `uptime` BIGINT);
CREATE TABLE process_memory_map(`pid` INTEGER, `start` TEXT, `end` TEXT, `permissions` TEXT, `offset` BIGINT, `device` TEXT, `inode` INTEGER, `path` TEXT, `pseudo` INTEGER)  ;
CREATE TABLE process_namespaces(`pid` INTEGER, `cgroup_namespace` TEXT, `ipc_namespace` TEXT, `mnt_namespace` TEXT, `net_namespace` TEXT, `pid_namespace` TEXT, `user_namespace` TEXT, `uts_namespace` TEXT)  ;
CREATE TABLE process_open_files(`pid` BIGINT, `fd` BIGINT, `path` TEXT)  ;
CREATE TABLE process_open_sockets(`pid` INTEGER, `fd` BIGINT, `socket` BIGINT, `family` INTEGER, `protocol` INTEGER, `local_address` TEXT, `remote_address` TEXT, `local_port` INTEGER, `remote_port` INTEGER, `path` TEXT, `state` TEXT, `net_namespace` TEXT)  ;
CREATE TABLE processes(`pid` BIGINT, `name` TEXT, `path` TEXT, `cmdline` TEXT, `state` TEXT, `cwd` TEXT, `root` TEXT, `uid` BIGINT, `gid` BIGINT, `euid` BIGINT, `egid` BIGINT, `suid` BIGINT, `sgid` BIGINT, `on_disk` INTEGER, `wired_size` BIGINT, `resident_size` BIGINT, `total_size` BIGINT, `user_time` BIGINT, `system_time` BIGINT, `disk_bytes_read` BIGINT, `disk_bytes_written` BIGINT, `start_time` BIGINT, `parent` BIGINT, `pgroup` BIGINT, `threads` INTEGER, `nice` INTEGER)  ;
CREATE TABLE prometheus_metrics(`target_name` TEXT, `metric_name` TEXT, `metric_value` DOUBLE, `timestamp_ms` BIGINT);
CREATE TABLE python_packages(`name` TEXT, `version` TEXT, `summary` TEXT, `author` TEXT, `license` TEXT, `path` TEXT, `directory` TEXT);
CREATE TABLE routes(`destination` TEXT, `netmask` TEXT, `gateway` TEXT, `source` TEXT, `flags` INTEGER, `interface` TEXT, `mtu` INTEGER, `metric` INTEGER, `type` TEXT);
-- CREATE TABLE rpm_package_files(`package` TEXT, `path` TEXT, `username` TEXT, `groupname` TEXT, `mode` TEXT, `size` BIGINT, `sha256` TEXT)  ;
-- CREATE TABLE rpm_packages(`name` TEXT, `version` TEXT, `release` TEXT, `source` TEXT, `size` BIGINT, `sha1` TEXT, `arch` TEXT);
CREATE TABLE selinux_events(`type` TEXT, `message` TEXT, `time` BIGINT, `uptime` BIGINT);
CREATE TABLE shadow(`password_status` TEXT, `hash_alg` TEXT, `last_change` BIGINT, `min` BIGINT, `max` BIGINT, `warning` BIGINT, `inactive` BIGINT, `expire` BIGINT, `flag` BIGINT, `username` TEXT)  ;
CREATE TABLE shared_memory(`shmid` INTEGER, `owner_uid` BIGINT, `creator_uid` BIGINT, `pid` BIGINT, `creator_pid` BIGINT, `atime` BIGINT, `dtime` BIGINT, `ctime` BIGINT, `permissions` TEXT, `size` BIGINT, `attached` INTEGER, `status` TEXT, `locked` INTEGER);
CREATE TABLE shell_history(`uid` BIGINT, `time` INTEGER, `command` TEXT, `history_file` TEXT);
CREATE TABLE smart_drive_info(`device_name` TEXT, `disk_id` INTEGER, `driver_type` TEXT, `model_family` TEXT, `device_model` TEXT, `serial_number` TEXT, `lu_wwn_device_id` TEXT, `additional_product_id` TEXT, `firmware_version` TEXT, `user_capacity` TEXT, `sector_sizes` TEXT, `rotation_rate` TEXT, `form_factor` TEXT, `in_smartctl_db` INTEGER, `ata_version` TEXT, `transport_type` TEXT, `sata_version` TEXT, `read_device_identity_failure` TEXT, `smart_supported` TEXT, `smart_enabled` TEXT, `packet_device_type` TEXT, `power_mode` TEXT, `warnings` TEXT)  ;
CREATE TABLE smbios_tables(`number` INTEGER, `type` INTEGER, `description` TEXT, `handle` INTEGER, `header_size` INTEGER, `size` INTEGER, `md5` TEXT);
CREATE TABLE socket_events(`action` TEXT, `pid` BIGINT, `path` TEXT, `fd` TEXT, `auid` BIGINT, `success` INTEGER, `family` INTEGER, `local_address` TEXT, `remote_address` TEXT, `local_port` INTEGER, `remote_port` INTEGER, `time` BIGINT, `uptime` BIGINT);
CREATE TABLE ssh_configs(`uid` BIGINT, `block` TEXT, `option` TEXT, `ssh_config_file` TEXT)  ;
CREATE TABLE sudoers(`header` TEXT, `rule_details` TEXT);
CREATE TABLE suid_bin(`path` TEXT, `username` TEXT, `groupname` TEXT, `permissions` TEXT);
CREATE TABLE syslog_events(`time` BIGINT, `datetime` TEXT, `host` TEXT, `severity` INTEGER, `facility` TEXT, `tag` TEXT, `message` TEXT);
CREATE TABLE system_controls(`name` TEXT, `oid` TEXT, `subsystem` TEXT, `current_value` TEXT, `config_value` TEXT, `type` TEXT)  ;
CREATE TABLE system_info(`hostname` TEXT, `uuid` TEXT, `cpu_type` TEXT, `cpu_subtype` TEXT, `cpu_brand` TEXT, `cpu_physical_cores` INTEGER, `cpu_logical_cores` INTEGER, `cpu_microcode` TEXT, `physical_memory` BIGINT, `hardware_vendor` TEXT, `hardware_model` TEXT, `hardware_version` TEXT, `hardware_serial` TEXT, `computer_name` TEXT, `local_hostname` TEXT);
CREATE TABLE time(`weekday` TEXT, `year` INTEGER, `month` INTEGER, `day` INTEGER, `hour` INTEGER, `minutes` INTEGER, `seconds` INTEGER, `timezone` TEXT, `local_time` INTEGER, `local_timezone` TEXT, `unix_time` INTEGER, `timestamp` TEXT, `datetime` TEXT, `iso_8601` TEXT);
CREATE TABLE ulimit_info(`type` TEXT, `soft_limit` TEXT, `hard_limit` TEXT);
CREATE TABLE uptime(`days` INTEGER, `hours` INTEGER, `minutes` INTEGER, `seconds` INTEGER, `total_seconds` BIGINT);
CREATE TABLE usb_devices(`usb_address` INTEGER, `usb_port` INTEGER, `vendor` TEXT, `vendor_id` TEXT, `version` TEXT, `model` TEXT, `model_id` TEXT, `serial` TEXT, `class` TEXT, `subclass` TEXT, `protocol` TEXT, `removable` INTEGER);
CREATE TABLE user_events(`uid` BIGINT, `auid` BIGINT, `pid` BIGINT, `message` TEXT, `type` INTEGER, `path` TEXT, `address` TEXT, `terminal` TEXT, `time` BIGINT, `uptime` BIGINT);
CREATE TABLE user_groups(`uid` BIGINT, `gid` BIGINT)  ;
CREATE TABLE user_ssh_keys(`uid` BIGINT, `path` TEXT, `encrypted` INTEGER)  ;
CREATE TABLE users(`uid` BIGINT, `gid` BIGINT, `uid_signed` BIGINT, `gid_signed` BIGINT, `username` TEXT, `description` TEXT, `directory` TEXT, `shell` TEXT, `uuid` TEXT)  ;
CREATE TABLE yara(`path` TEXT, `matches` TEXT, `count` INTEGER, `sig_group` TEXT, `sigfile` TEXT, `strings` TEXT, `tags` TEXT)  ;
CREATE TABLE yara_events(`target_path` TEXT, `category` TEXT, `action` TEXT, `transaction_id` BIGINT, `matches` TEXT, `count` INTEGER, `strings` TEXT, `tags` TEXT, `time` BIGINT);
CREATE TABLE yum_sources(`name` TEXT, `baseurl` TEXT, `enabled` TEXT, `gpgcheck` TEXT, `gpgkey` TEXT);
